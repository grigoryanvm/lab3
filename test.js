//создаем пустой массив, он будет нужен
let arr = []

//записываем в переменную все кнопки добавления товара в корзину
const carts = document.querySelectorAll('.cart__box');
//записываем в переменную блок, где будут храниться товары
const products = document.querySelector('.products');

//фуекция productsCart
const productsCart = (e) => {
//определяем текущую карточку
//(parentNode может быть больше или меньше, в зависимости от того, какая вложенность кнопки добавления товара в корзину)
const card = e.currentTarget.parentNode.parentNode;
//записываем в переменную все теги, которые есть у текущий карточки
const cardChild = card.childNodes;
//записываем в объект данные о карточке
const cardInfo = {
//ключ. например, изображения, равен: тег img -> его первый атрибут, то есть src(у меня он первый) -> значение этого атрибута
//это может быть по другому, у каждого своя html верстка
imgSrc: cardChild[1].attributes[0].value,
name: cardChild[3].innerHTML,
price: cardChild[5].childNodes[1].innerHTML,
}

//записываем в ранее созданный массив выше созданный объект
arr.push(cardInfo)

//затем мы фильтруем массив и ищем в нем объекты, которые равны названию нашей карточки
//и записываем это в переменную
const filteredArray = arr.filter(item => item.name === cardInfo.name)

//затем создаем cookie с ключом, равным закодированному названию карточки, а значением - длиной отфильтрованного массива
//имя карточки можно не кодировать, но так как в имени могут быть нежелательные символы, такие как пробел, табуляция и т.д.
//Так что лучше сделать кодировку, тогда такие символы так же закодируется и примет правильную кодировку
document.cookie = `${encodeURIComponent(`${cardInfo.name}`)}=${filteredArray.length}`

//записывем в переменную результыт функции getCookie
//эта функция возвратит массив со всеми ключами и их значениями из куки.
//она объявлена ниже
const filteredCookie = getCookie(document.cookie);

//для каждого элемента из этого массива делаем следующую логику:
filteredCookie.forEach(item => {
//вызываем функцию декодирования элмента массива
const decode = decodeURIComponent(item);

//если при разбиении этого элемента массива по знаку "," первым элементом будет
//значение, равняющееся названию карточки нашего товара, то:
if(decode.split(',')[0] == cardInfo.name){

//проверяем что если в блоке, где будут ханится товары, есть дочерние элементы, то
if(products.childNodes.length > 0){
//фильтруем этот блок с товарами так, чтобы он нашел массив товаров, где значение названия товара из этого блока
//было равно нашему декодированному товару так же по названию и записываем это в переменную
const filteredProducts = [...products.childNodes].filter(item => item.childNodes[3].innerHTML === decode.split(',')[0])
//если этот массив товаров не пустой, то:
if(filteredProducts.length > 0){
//для каждого такого товара совершаем его удаление из блока, где храняться товары
//все это нужно для того, чтобы при клике на товар, значение количества этого товара перезаписывалось
//то есть, при добавлении товара в корзину в корзине будет что-то по типу:

//название - плюшевый мишка, цена - 1000 рублей, количество - 1

//но при следующем клике на этот элемент будет происходить так, что в корзине будет так:

//название - плюшевый мишка, цена - 1000 рублей, количество - 2

//если бы этого кода не было, то в корзине было бы примерно так:

//название - плюшевый мишка, цена - 1000 рублей, количество - 1
//название - плюшевый мишка, цена - 1000 рублей, количество - 1

//то есть проиходил о бы просто добавление товара в корзину еще раз, а не увеличивалось бы его количество

filteredProducts.forEach(item => {
products.removeChild(item);
});
};
};

//после выше написанной проверки происходить добавление товара в корзину
products.innerHTML += `<div class="product">
<div class="product__img__box">
<img class="product__img" src="${cardInfo.imgSrc}">
</div>
<span>${cardInfo.name}</span>
<span>${cardInfo.price}</span>
<span>${item[1]}</span>
</div>`
}
})


}

//функция getCookie
function getCookie(cookie) {
//по факту, куки - это строка, с парами ключ=значение
//они разбиваются по точке с запятой
//поэтому мы разбиваем приходящие нам куки как раз таки по "; "
//записываем это всё в переменную arr
let arr = cookie.split('; ');

//для каждого элемента этой переменной
arr.map(item => {
//пушим в эту переменную(так как переменная является массивом) значение элемента по симолу "="
arr.push(item.split('='));
//таким образом получим что-то такое:
//arr = [['плюшевый мишка'][2]] то есть первый элемент - название товара, второй элемент - количество этого товара
})
//проверяем все значения на то, являются ли они массивом, и те, которые является записываем в переменную filter
const filter = arr.filter(item => Array.isArray(item) === true)
//возвращаем filter из функции
return filter;
}

// наконец, для каждой из этих кнопок добавления товара в корзину говорим,
// что если по ней совершен клик, то мы вызываем выше написанную функцию productsCart
carts.forEach(item => {
item.addEventListener('click', productsCart)
})